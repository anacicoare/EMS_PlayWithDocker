# Generated by Django 5.0.12 on 2025-03-03 11:03

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("email", models.EmailField(max_length=100, unique=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("type", models.CharField(default="normal", max_length=100)),
                (
                    "profile_picture",
                    models.CharField(
                        default="https://static.vecteezy.com/system/resources/thumbnails/001/840/618/small_2x/picture-profile-icon-male-icon-human-or-people-sign-and-symbol-free-vector.jpg",
                        max_length=300,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="userdata_groups",
                        related_query_name="userdata",
                        to="auth.group",
                        verbose_name="user groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="userdata_user_permissions",
                        related_query_name="userdata",
                        to="auth.permission",
                        verbose_name="user specific permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "date_created",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 44959)
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 44974)
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 44984)
                    ),
                ),
                ("estimation", models.FloatField()),
                ("type", models.CharField(default="NEW FEATURE", max_length=100)),
                ("status", models.CharField(default="TO DO", max_length=100)),
                ("original_estimate", models.FloatField(default=30)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "date_created",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 40690)
                    ),
                ),
                (
                    "date_last_modified",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 40703)
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="proj_backend.task",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "department",
                    models.CharField(default="no department", max_length=100),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 38871)
                    ),
                ),
                (
                    "date_last_modified",
                    models.DateTimeField(
                        default=datetime.datetime(2025, 3, 3, 13, 3, 8, 38900)
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        default=None, related_name="teams", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="task",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="proj_backend.team",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("details", models.CharField(max_length=1000)),
                ("amount", models.FloatField()),
                ("month", models.CharField(max_length=100)),
                ("year", models.IntegerField()),
                (
                    "recipient",
                    models.ManyToManyField(
                        related_name="payments", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "team",
                    models.ManyToManyField(
                        related_name="payments", to="proj_backend.team"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="userdata",
            name="teams_owner",
            field=models.ManyToManyField(related_name="owner", to="proj_backend.team"),
        ),
    ]
